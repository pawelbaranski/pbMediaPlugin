<?php

/**
 * PluginImage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginpbImage extends BasepbImage
{
    //ta metoda powinna byÄ‡ w pbImage a nie w pluginie bo tyczy sie wylacznie
    //modulu galerii, a wiec aplikacji a nie ogolnie. Jest tak bo jej sens
    //jest oparty o sposob zapisy miniatur w konkretnej strukturze co pozwala
    //ma usuniecie z bazy miniatur bez pobierania obiektow
//    static public function bulkDeleteFiles($filenames)
//    {
//        pbFile::deleteFiles(pbMedia::mediaDir(), $filenames);
//
//        foreach($filenames as &$filename)
//        {
//            $filename = '*'.$filename;
//        }
//
//        pbFile::deleteMultipleLikeFromDir(self::thumbnailsDir(), $filenames);
//    }

    /**
    * Psychically deletes related file AND its thumbnails from cache dir
    * @param Doctrine_Connection $conn
    * @return <type>
    */
    public function delete(Doctrine_Connection $conn = null)
    {
        //this deletes tha main file
        $deleted = parent::delete();

        //delete related thumbnails
        if($deleted)
        {
            $this->deleteThumbnails();
        }

        return $deleted;
    }

    public function deleteThumbnails()
    {
        pbFile::deleteLikeFromDir($this->getThumbnailsDir(), '*'.$this->getFileName());
    }

    static public function thumbnailsDir()
    {
        return sfConfig::get('app_pb_media_image_cache_dir');
    }

    public function getThumbnailsDir()
    {
        return self::thumbnailsDir();
    }

    /**
     * Creates a thumbnail represented by pbImageView object
     * @param <type> $width
     * @param <type> $height
     * @param <type> $method
     * @return pbImageView
     */
    public function getThumbnail($width, $height, $method = 'inside')
    {
        $options = array('width' => $width, 'height' => $height, 'method' => $method);

        $image_view = new pbImageView($this, $options);

        return $image_view;
    }

}